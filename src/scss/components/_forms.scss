// Forms
//
// Covers styles used for forms, such as the `<input>` and `<select>`
// elements.
//
// Styleguide 2

@include scut-reset-form;
@include scut-reset-pointer;
@include scut-reset-button;

// Fixing something with normalize
input[type='search'] {
  box-sizing: border-box;
}

@mixin input-structure(
  $input-border-radius: $input-border-radius,
  $input-font-size: $input-font-size,
  $input-padding-vertical: $input-padding-vertical,
  $input-padding-horizontal: $input-padding-horizontal
) {
  border-radius: $input-border-radius;
  font-size: $input-font-size;
  padding: $input-padding-vertical $input-padding-horizontal;
  line-height: 1.2;
  // @include t-input();
}

@mixin tp-input {
  max-width: 100%;
  @include input-structure();
  color: $input-c;
  background-color: $input-bg;
  border: none;
  border-bottom: $input-border;
  box-shadow: none;
  // box-shadow: inset 0 0 .6em rgba(0,0,0,.07);
  transition: all $transition-fast;
  outline: none;
  font-weight: normal;
  vertical-align: bottom;

  &:hover {
    color: $input-c--hover;
    background-color: $input-bg--hover;
    border-bottom: $input-border--hover;
    // box-shadow: 0 0 .1em inset rgba(0,0,0,.3);
  }

  &:focus,
  &:active {
    color: $input-c--active;
    background-color: $input-bg--active;
    border-bottom: $input-border--active;
    // box-shadow: 0 0 .2em rgba(0,0,0,.3);
  }
}

%input {
  @include tp-input();
}

@mixin tp-button {
  max-width: 100%;
  text-align: center;
  @include input-structure();
  background-color: $button-bgc;
  border: $button-border;
  color: $button-c;
  box-shadow: none;
  text-shadow: none;
  font-weight: bold;
  transition: background $transition-fast, border $transition-fast,
    color $transition-fast;

  &:hover,
  &:focus {
    background-color: $button-bgc--hover;
    border: $button-border--hover;
    color: $button-c--hover;
  }

  &:active {
    background-color: $button-bgc--active;
    border: $button-border--active;
    color: $button-c--active;
    transform: translate(1px 1px);
  }
}

%button {
  @include tp-button();
}

// General input styles
//
// : - Stardard style
// :hover - Simple hover style
// :focus - Focus and active styles
// :active - Focus and active styles
//
// markup:
// <input class="{$modifiers}" />
// <select class="{$modifiers}">
//     <option>Option</option>
// </select>
// <textarea class="{$modifiers}"></textarea>
// <input type="checkbox" />
//
// Styleguide 2.1
input,
select,
textarea {
  @extend %input;
}

// Select fields
select {
  appearance: none;
  padding-right: $input-padding-horizontal + 1.5em;
  background-position: right $input-padding-horizontal center;
  background-repeat: no-repeat;
  background-size: 0.75em auto;
  background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="8" height="8" viewBox="0 0 8 8"><path fill="#{$input-c}" d="M0 0l4 4 4-4h-8z" transform="translate(0 2)" /></svg>');
}

// Radio buttons
$radio-size: 1.5em;
$radio-inner-size: 0.7em;
input[type='radio'] {
  display: inline-block;
  border-radius: 50%;
  cursor: pointer;
  height: $radio-size;
  margin-right: 0.2em;
  position: relative;
  width: $radio-size;
  appearance: none;
  border: none;

  &:hover,
  &:focus,
  &:active {
    background-color: $input-bg--active;
  }
}
input[type='radio']:after {
  content: '';
  display: block;
  position: relative;
  border-radius: 50%;
  background-color: darken($input-bg, 40%);
  height: $radio-inner-size;
  width: $radio-inner-size;
  left: ($radio-size - $radio-inner-size) / 2;
  top: ($radio-size - $radio-inner-size) / 2;
}
input[type='radio']:checked:after {
  background-color: $link-c;
}

// Checkboxes
$checkbox-size: 1.5em;
input[type='checkbox'] {
  display: inline-block;
  cursor: pointer;
  height: $checkbox-size;
  margin-right: 0.2em;
  position: relative;
  width: $checkbox-size;
  appearance: none;
  text-align: center;
  border: none;

  &:hover,
  &:focus,
  &:active {
    color: $input-c--active;
    background-color: $input-bg--active;
  }
}
input[type='checkbox']:after {
  content: ' ';
  display: block;
  line-height: $checkbox-size;
}
input[type='checkbox']:checked:after {
  content: 'âœ”';
}

// Buttons
//
// : - Standard style
// :hover - Simple hover style
// :focus - Focus style
// :active - Active style
//
// markup:
// <button class="button {$modifiers}">Button</button>
//
// Styleguide 2.2
button,
.button,
input[type='submit'] {
  @extend %button;
}

@if ($gravity-forms) {
  .gform_fields {
    @extend %scut-list-unstyled;
    margin: 0;
    padding: 0;
  }

  .gfield {
    @include tp-trailer(0.5);
  }

  .gfield_label {
    display: inline-block;
    @include tp-trailer(0.5);
  }

  .gfield_required {
    color: $error-c;
    margin-left: 0.2em;
  }

  .gfield_description {
    @include tp-leader(0.5);
    font-size: 0.8em;
  }

  .ginput_complex {
    border-bottom: 1px solid $border-c;
    border-top: 1px solid $border-c;
    @include tp-padding-leader();
    @include tp-padding-trailer();
  }

  .gfield_checkbox {
    @extend %scut-list-inline;
    margin: 0;

    & > li {
      @include typecsset-space(margin-right, 1);
    }

    input {
      margin-right: 0.3em;
    }
  }

  // Errors

  .validation_error {
    display: block;
    background-color: $error-c;
    color: tp-lighten($error-c, 40%);
    padding: 0.5em 0.8em;
    border: 1px solid tp-shade($error-c, 15%);
    border-radius: 0.3em;
    @include tp-trailer();
  }

  .gfield_error {
    .gfield_description.validation_message {
      @extend .validation_error;
      margin-bottom: 0;
      margin-top: 0.2em;
      font-size: 0.8em;
    }

    input,
    select,
    textarea {
      border-color: $error-c;
    }
  }

  .gfield_creditcard_warning_message {
    @extend .validation_error;
  }

  // Layouts

  .gfield {
    @extend %scut-clearfix;
  }

  .left_label {
    @include breakpoint($mid-break) {
      .gfield_label {
        @include span(3 of 10);
        // text-align: right;
        margin-top: 0.3em;
      }
      .ginput_container {
        @include span(last 7 of 10);
      }
      .gfield_checkbox {
        margin-top: 0.3em;
      }
    }
    @include breakpoint($large-break) {
      .gfield_label {
        @include span(2 of 10);
        // text-align: right;
        margin-top: 0.3em;
      }
      .ginput_container {
        @include span(last 8 of 10);
      }
    }

    &.gform_footer {
      text-align: right;
    }
  }

  .right_label {
    @include breakpoint($mid-break) {
      .gfield_label {
        @include span(last 3 of 10);
        margin-top: 0.3em;
      }
      .ginput_container {
        @include span(7 of 10);
      }
    }
  }

  .ginput_left {
    clear: left;
    @include span(5 of 10);
  }

  .ginput_right {
    clear: right;
    @include span(last 5 of 10);
  }

  .large {
    width: 100%;
  }

  .medium {
    width: 75%;
  }

  .small {
    width: 50%;
  }

  .ginput_complex {
    @extend %scut-clearfix;

    label {
      display: block;
      font-size: 0.8em;
      @include tp-leader(0.5);
      clear: both;
    }

    input,
    select,
    textarea {
      width: 100%;
    }

    input[type='radio'],
    input[type='checkbox'] {
      width: auto;
    }
  }

  .gfield_list {
    table-layout: auto;
    width: 100%;
  }

  .gfield_list_cell {
    padding: 0;
    @include tp-padding-trailer(0.5);

    input {
      width: 100%;
    }
  }

  .gfield_list_icons {
    padding: 0;
    text-align: right;
    @include tp-padding-trailer(0.5);
  }

  .ginput_full {
    @extend %scut-clearfix;
    display: block;
    width: 100%;
    @include tp-trailer(1);
  }

  .ginput_cardinfo_left {
    @include breakpoint($mid-break) {
      @include span(5 of 10);
    }
  }

  .ginput_cardinfo_right {
    @include breakpoint($mid-break) {
      @include span(last 5 of 10);
    }
  }

  .ginput_card_expiration_month {
    @include span(5 of 10);
    @include tp-trailer(0.5);
  }

  .ginput_card_expiration_year {
    @include span(last 5 of 10);
    @include tp-trailer(0.5);
  }

  .ginput_card_security_code_icon {
    display: none;
  }

  .gform_card_icon_container {
    display: none;
  }
}
